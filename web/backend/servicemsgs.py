import  multiprocessing

from    typing      import ClassVar
#--------------------------------------------------------------------------------------------------

class BaseMsg:
    callback: ClassVar[callable]
    #----------------------------------------------------------------------------------------------
    
    def __init__(self):
        self._out_queue     = multiprocessing.Queue()
    #----------------------------------------------------------------------------------------------

    def __bool__(self): return self._status
    #----------------------------------------------------------------------------------------------

    def run(self): 
        if hasattr(self, "callback"):
            self.callback(self)
    #----------------------------------------------------------------------------------------------

    def set_error(self, info): self._out_queue.put((False, info))
    #----------------------------------------------------------------------------------------------

    def set_ok(self, info): self._out_queue.put((True, info))
    #----------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------

class GetPatients(BaseMsg):
    def __init__(self, ):
        super().__init__()

